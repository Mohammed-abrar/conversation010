<html>
<head>
	<title> Graphs </title>
	<meta charset="utf-8">
	  <meta name="viewport" content="width=device-width, initial-scale=1">
	  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
	  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>	
	  <script src = "https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular.js"> </script>
	  <script src="/node_modules/chart.js/dist/Chart.min.js"></script>
	  <script src="/node_modules/angular-chart.js/dist/angular-chart.min.js"></script>
	  
			  <!-- Resources -->
		<script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
		<script src="https://www.amcharts.com/lib/3/pie.js"></script>
		<script src="https://www.amcharts.com/lib/3/serial.js"></script>
		<script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
		<link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
		<script src="https://www.amcharts.com/lib/3/themes/light.js"></script>
		
		 <script src="https://code.jquery.com/jquery-2.2.0.min.js"></script>
		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js"></script>
		<script type="text/javascript" src="https://unpkg.com/personality-sunburst-chart@2.0.4/dist/index.js"></script>
		<script src="https://d3js.org/d3-color.v1.min.js"></script>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" rel="stylesheet" />

</head>
 
<!-- Styles -->
<style>

	 #profile pre {
        max-height: 400px;
      }
      #textSummary {
        font-size: 1.2em;
      }  
.chartdiv {
  width: 100%;
  height: 300px;
}

body {
	background-color : #8187a7; 
	font-family : Times New Roman;
	
}	
hr {
		border-top: 1px solid #8187a7;
	border-bottom: 1px solid #8187a7;
}
.wrap{
	background-color :#fff; 	
}	
.title {
	font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
	text-align : center;
	color : #1f517c;
}
	
.mybutton {
	background-color : #8187a7;
	color : #fff;
	font-size : 16px;
}	
.mytable {
	font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
    border-collapse: collapse;
    width: 100%;
	border-color : #8187a7;
}
.mytable th {
    text-align: center;
    background-color: #8187a7;
    color: white;
	 text-transform: uppercase;
}	
.mytable td, .mytable th {
    border: 1px solid #ddd;
    padding: 8px;
}

.mytable tr:nth-child(even){background-color: #f2f2f2;}

.mytable tr:hover {background-color: #ddd;}
.mytable caption {
	color : #1f517c;
	text-align : center;
}
.mymodal{
	background-color : #8187a7; 
	 color: white;
}
</style>

<script src="https://www.amcharts.com/lib/3/serial.js"></script>



<!-- HTML -->


<body ng-app = "myApp" ng-controller = "Graph">

	<div class = "container wrap">	
		<div class = "row">
			  <div class = "col col-sm-6">
					<h3 class = "title">Candidate Evaluation </h3>
				<button class = "btn btn-block mybutton" ng-click = "flag = !flag"> chart </button><br/><br/>
				<div  ng-if ="flag==0"  ng-init="chart()">
					<div id="chartdiv" class = "chartdiv"></div>
				</div>
				<div ng-if ="flag==1">				
					<canvas id="bar" class="chart chart-bar"
					  chart-data="data" chart-labels="labels" chart-series="series">
					</canvas>	
				</div>
			  </div>		 					
			
			<div class = "col col-sm-6">	
				<h3 class = "title"> Top Scorer </h3>
				<button class = "btn btn-block mybutton" ng-click = "button1=!button1"> chart </button><br/><br/>
				<div ng-if ="button1==0">
					<canvas id="pie" class="chart chart-pie"
						chart-data="studata" chart-labels="stulabel" chart-options="options" style = "length : 20px;width:20px">
					</canvas>
				</div>
				<div ng-if ="button1==1">					
					<div id="TopScorerGraph" class = "chartdiv" ng-init="DrawTopScorerGraph(studentData)"></div>	
				</div>
			</div>
		</div>
		<hr>
	</div>
	
	<div class = "container wrap">	
		<div class = "row">	
		  <div class = "col col-sm-6">
			<div class="table-responsive mytable">
					<table class="table" border="3.0">
						<caption>
							<h2> Top Scores Details</h3> 	
						</caption>
					 <tr>
						<th>
							<h4> Rank </h4>
						</th>
						<th>
							<h4>Candidate ID</h4>
						</th>
						
						<th>
							<h4>Candidate Name</h4>
						</th>
						<th>
							<h4>Score</h4>
						</th>
						<th>
							<h4> view full score </h4>
						</th>
						<th>
							<h4>Personality Score </h4>
						</th>
					 </tr>
						
					 <tr ng-repeat="x in student track by $index">
						<div ng-if = "student[$index].student.GRADE!='Overqualified'">
							<td>
								{{rank[$index]}}
							</td>
							<td>
								{{x.student.Candidate_ID}}
							</td>
							<td>
								{{x.student.Name}}
							</td>
							<td>
								{{studata[$index]}}
							</td>
							<td>
								 <button type="button" class="btn btn-link" data-toggle="modal" data-target="#{{x.student._id}}">view</button>
							   	    <div class="modal fade" id="{{x.student._id}}" role="dialog">
										<div class="modal-dialog modal-lg">											
											  <!-- Modal content-->
											<div class="modal-content">
												<div class="modal-header">
												  <button type="button" class="close" data-dismiss="modal">&times;</button>
												  <h4 class="modal-title">CandidateID: {{student[$index].student.Candidate_ID}}<br/>
													Candidate ID:	{{student[$index].student.Candidate_ID}}</h4>
												</div>
												
												<div class="modal-body container-fluid mymodal">
														
													<div id={{chartid='chart_'+student[$index].student.Candidate_ID}} class = "chartdiv" >
														{{DrawGraph(chartid,studentGraph[$index])}}															
													</div>
													
													
													<a href = "{{student[$index].student.JOB_ID}}" target="_blank" ><button class = "btn btn-sm btn-info">Resume</button> </a>
												</div>
											
												<div class="modal-footer">
												  <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
												</div>
											</div>											  
										</div>
									</div>
							</td>
						</div>
						<td>
							<button type="button" class="btn btn-link" data-toggle="modal" data-target="#mymodal" ng-click = "PersonalityInsights(student[$index].student.Candidate_ID)">view</button>				
						</td>
					 </tr>
					</table>
				</div>
			 </div>
			 <div class = "col col-sm-6">
				<div class="table-responsive mytable">
					<table class="table" border="3.0">
							<caption>
								<h3> Not Eligible Candidate</h3> 	
							</caption>
						 <tr>
							<th>
								<h4>Candidate ID</h4>
							</th>
							<th>
								<h4>Candidate Name</h4>
							</th>
							<th>
								<h4>Reason</h4>
							</th>

							<th>
								<h4> view full score </h4>
							</th>
						 </tr>
						  <tr ng-repeat="x in overqualifiedstudents track by $index">	
							
								<td>
									{{x.Candidate_ID}}
								</td>
								<td>
									{{x.Name}}
								</td>
								<td>
									{{x.Reason}}
								</td>
									<td>
									 <button type="button" class="btn btn-link" data-toggle="modal" data-target="#{{x._id}}">view</button>
										<div class="modal fade" id="{{x._id}}" role="dialog">
											<div class="modal-dialog modal-lg">											
												  <!-- Modal content-->
												<div class="modal-content">
													<div class="modal-header">
													  <button type="button" class="close" data-dismiss="modal">&times;</button>
													  <h4 class="modal-title">CandidateID: {{overqualifiedstudents[$index].Candidate_ID}}<br/>
														Candidate_ID:	{{overqualifiedstudents[$index].Candidate_ID}}</h4>
													</div>
													
													<div class="modal-body container-fluid mymodal">
															
														<div id={{chartid='chart_'+overqualifiedstudents[$index].Candidate_ID}} class = "chartdiv" >
															{{DrawGraph(chartid,overqualifiedGraph[$index])}}															
														</div>
														
														<a href = "{{overqualifiedstudents[$index].JOB_ID}}" target="_blank" ><button class = "btn btn-sm btn-info">Resume </button> </a>
													</div>
												
													<div class="modal-footer">
													  <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
													</div>
												</div>											  
											</div>
										</div>
								</td>
						  </tr>
					</table>
				</div>
			 </div>
		</div>	
	</div>		
<!-- Modal -->
							<div id="mymodal" class="modal fade my" role="dialog">
							  <div class="modal-dialog modal-lg">							
								<div class="modal-content">
								  <div class="modal-header">
									<button type="button" class="close" data-dismiss="modal">&times;</button>
									<h4 class="modal-title"><h2>Personality Sunburst Chart</h2></h4>
								  </div>
								  <div class="modal-body mymodel">
									<div id="sunburstChart"></div>
								  </div>
								  <div class="modal-footer">
									<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
								  </div>
								</div>

							  </div>
							</div>			
</body>

<script>
 
var app = angular.module('myApp',["chart.js"])
app.controller('Graph', function($scope, $http , $filter) {		
		  $scope.series = ['Maximum', 'Obtained'];
		$scope.button1 = 1;
		$scope.flag = 0;
	    $scope.overGraph = [];
	    $scope.rank = [];
		$scope.overGraphLables = ["EXP_SCORE","COMMUNICATION","RESEARCH_WORK","EDUCATION_SCORE","SPECILIZATION_SCORE","CERTIFICATINO_SCORE","PUBLICATION_SCORE","TEAM_WORK_SCORE","CUSTOMER_FOCUS_SCORE","FOREIGN_LANGUAGE_SCORE"];
		$scope.studentGraph = [];
		$scope.overqualifiedGraph = [];
		$scope.studentGraphLables = ["EXP_SCORE","COMMUNICATION","RESEARCH_WORK","EDUCATION_SCORE","SPECILIZATION_SCORE","CERTIFICATINO_SCORE","PUBLICATION_SCORE","TEAM_WORK_SCORE","CUSTOMER_FOCUS_SCORE","FOREIGN_LANGUAGE_SCORE"];
		$scope.labels = ["very good in %","good in %","average in %","Overqualified in %","not good in %",];	 
		$scope.student = [];
		$scope.studentData = [];
		$scope.overqualifiedstudents = [];
		var  overqualified = 0,verygood = 0, notgood =0 ,good = 0,average = 0,total = 0, studentNames = [], studentMarks = [] ,overqualifiedstudentsId = [],overqualifiedstudentMarks = [];
		 $http.get('/getdata').then(function(response){
		     
			 for(var i = 0 ; i < response.data.length ;i++)
			 {
				if(angular.equals(response.data[i].GRADE,"Overqualified")== true)
				{
					overqualified++;
					$scope.overqualifiedstudents.push(response.data[i]);
				}
				else if(angular.equals(response.data[i].GRADE,"Not Good")== true)
				{
					notgood++;
					$scope.overqualifiedstudents.push(response.data[i]);
				
				}
				else
				{					
				 if(response.data[i].values.TOTAL >= 60 && response.data[i].values.TOTAL <= 100)
				 {
					verygood++;
					$scope.student.push({"student":response.data[i] ,"total": response.data[i].values.TOTAL});
				 }
				 if(response.data[i].values.TOTAL >= 50 && response.data[i].values.TOTAL < 60)
				 {
					good++;
					$scope.student.push({"student":response.data[i] ,"total": response.data[i].values.TOTAL});
					}
				 if(response.data[i].values.TOTAL >= 25 && response.data[i].values.TOTAL < 50)
				 {
					average++;
					
					$scope.student.push({"student":response.data[i] ,"total": response.data[i].values.TOTAL});
					}
				}
			 }
			 console.log(overqualified);
			 verygood = Math.round(verygood /response.data.length * 100);
			 good = Math.round(good /response.data.length * 100);
			 average = Math.round(average /response.data.length * 100);
			 notgood = Math.round(notgood /response.data.length * 100);
			 overqualified = Math.round(overqualified /response.data.length * 100);
			 $scope.data = [verygood,good,average,overqualified,notgood];
 
			 $scope.student = $filter('orderBy')($scope.student, '-total');
			
			  for(var i = 0 ; i < $scope.student.length && i <= 10  ;i++)
			  {
					$scope.studentData.push({"Candidate_ID": $scope.student[i].student.Candidate_ID,"total":$scope.student[i].total});
					studentNames.push($scope.student[i].student.Candidate_ID);
					studentMarks.push($scope.student[i].total);
				}
			  for(var i = 0 ; i < $scope.student.length  ;i++)
			  {					
					$scope.studentGraph.push([$scope.student[i].student.values.EXP_SCORE , $scope.student[i].student.values.COMMUNICATION  , $scope.student[i].student.values.RESEARCH_WORK , $scope.student[i].student.values.EDUCATION_SCORE , $scope.student[i].student.values.SPECILIZATION_SCORE , $scope.student[i].student.values.CERTIFICATINO_SCORE , $scope.student[i].student.values.PUBLICATION_SCORE , $scope.student[i].student.values.TEAM_WORK_SCORE , $scope.student[i].student.values.CUSTOMER_FOCUS_SCORE , $scope.student[i].student.values.FOREIGN_LANGUAGE_SCORE,0]);					 
			  }
				var rank = 1;
				$scope.rank.push(rank);	  
				for(var j = 0 ; j < $scope.student.length-1 ;j++)
				{
					if($scope.student[j].total== $scope.student[j+1].total)
						$scope.rank.push(rank);
					else
					{
						rank++;
						$scope.rank.push(rank);
					}
				}
			 studentMarks.push(0);
			 $scope.stulabel = studentNames;
			 $scope.studata = studentMarks;
			 
			 
			 //overqualified graph data
			 for(var i = 0; i < $scope.overqualifiedstudents.length; i++)
			 {
				$scope.overqualifiedGraph.push([$scope.overqualifiedstudents[i].values.EXP_SCORE , $scope.overqualifiedstudents[i].values.COMMUNICATION  , $scope.overqualifiedstudents[i].values.RESEARCH_WORK , $scope.overqualifiedstudents[i].values.EDUCATION_SCORE , $scope.overqualifiedstudents[i].values.SPECILIZATION_SCORE , $scope.overqualifiedstudents[i].values.CERTIFICATINO_SCORE , $scope.overqualifiedstudents[i].values.PUBLICATION_SCORE , $scope.overqualifiedstudents[i].values.TEAM_WORK_SCORE , $scope.overqualifiedstudents[i].values.CUSTOMER_FOCUS_SCORE , $scope.overqualifiedstudents[i].values.FOREIGN_LANGUAGE_SCORE,0]);					 	 
			 }
			 if($scope.flag == 0)
			 $scope.chart();				 
			 $scope.DrawTopScorerGraph($scope.studentData);
		 });
		 
$scope.DrawTopScorerGraph = function(data){
	var chart = AmCharts.makeChart("TopScorerGraph", {
		"theme": "light",
		"type": "serial",
		"startDuration": 0.2,
		"dataProvider": data,
		"valueAxes": [{
			"position": "left",
			"title": "Visitors"
		}],
		"graphs": [{
			"balloonText": "[[category]]: <b>[[value]]</b>",
			"fillColorsField": "color",
			"fillAlphas": 1,
			"lineAlpha": 0.1,
			"type": "column",
			"valueField": "total"
		}],
		"depth3D": 20,
		"angle": 30,
		"chartCursor": {
			"categoryBalloonEnabled": false,
			"cursorAlpha": 0,
			"zoomable": false
		},
		"categoryField": "Candidate_ID",
		"categoryAxis": {
			"gridPosition": "start",
			"labelRotation": 90
		},
		"export": {
			"enabled": true
		 }

});
}

$scope.chart = function(){
 AmCharts.makeChart( "chartdiv", {
  "type": "pie",
  "theme": "light",
  "dataProvider": [ {
    "GRADE": "Very good",
    "value": verygood
  }, {
    "GRADE": "Good",
    "value": good
  }, {
    "GRADE": "Average",
    "value": average
  }, {
    "GRADE": "Over Qualified",
    "value": overqualified
  }, {
    "GRADE": "Not Good",
    "value": notgood
  }],
  "valueField": "value",
  "titleField": "GRADE",
  "outlineAlpha": 0.4,
  "depth3D": 15,
  "angle": 30,
  "export": {
    "enabled": true
  }
});
}		 
		 
$scope.DrawGraph = function(chartid,data){
	var chart = AmCharts.makeChart(chartid, {
    "theme": "light",
    "type": "serial",
    "dataProvider": [{
        "subject": "EXP",
        "Max": 15,
        "Obtained":data[0]
    }, {
        "subject": "COMMUNICATION",
        "Max": 10 ,
        "Obtained": data[1]
    }, {
        "subject": "RESEARCH_WORK",
        "Max": 10,
        "Obtained": data[2]
    }, {
        "subject": "EDUCATION",
        "Max": 15,
        "Obtained": data[3]
    }, {
        "subject": "SPECILIZATION",
        "Max": 20,
        "Obtained": data[4]
    }, {
        "subject": "CERTIFICATION",
        "Max": 4,
        "Obtained": data[5]
    }, {
        "subject": "PUBLICATION",
        "Max": 4,
        "Obtained": data[6]
    }, {
        "subject": "TEAM_WORK",
        "Max": 4,
        "Obtained": data[7]
    }, {
        "subject": "CUSTOMER_FOCUS",
        "Max": 8,
        "Obtained": data[8]
    }, {
        "subject": "FOREIGN_LANGUAGE",
        "Max": 10,
        "Obtained": data[9]
    }],
    "valueAxes": [{
        "stackType": "3d",
        "unit": "%",
        "position": "left",
        "title": "Scores",
		 "fontSize": 10
    }],
    "startDuration": 0.5,
    "graphs": [{
        "balloonText": " Actual scores in [[category]] : <b>[[value]]</b>",
        "fillAlphas": 0.9,
        "lineAlpha": 0.4,
 
        "type": "column",
        "valueField": "Obtained"
    }, {
        "balloonText": "Max score in [[category]] : <b>[[value]]</b>",
        "fillAlphas": 0.9,
        "lineAlpha": 0.9,
        "type": "column",
        "valueField": "Max"
    }],
    "plotAreaFillAlphas": 0.5,
    "depth3D": 60,
    "angle": 30,
    "categoryField": "subject",
    "categoryAxis": {
        "gridPosition": "start",

    },
    "export": {
    	"enabled": false
     },
	 "fontSize": 7
});
}
$scope.PersonalityInsights = function(id){
console.log(id);
$.getJSON('/PersonalityInsights/'+id+'.json', '', function ( profile ) {
        var chart = new PersonalitySunburstChart({'selector': '#sunburstChart'});
        chart.show(profile, '/images/'+id+'.jpg');
      });
}
});
</script>
<script>
jQuery('.chart-input').off().on('input change',function() {
	var property	= jQuery(this).data('property');
	var target		= chart;
	chart.startDuration = 0;

	if ( property == 'topRadius') {
		target = chart.graphs[0];
      	if ( this.value == 0 ) {
          this.value = undefined;
      	}
	}

	target[property] = this.value;
	chart.validateNow();
});

</script>
</html>

